{"version":3,"sources":["Components/Navbar.js","Components/GlobalStats.js","Components/CountryStats.js","Components/Graphline.js","Components/InfoPanel.js","Components/FootNav.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","NavbarSearch","classes","className","AppBar","Toolbar","Typography","variant","noWrap","Button","createStyles","maxWidth","margin","marginTop","paper","textAlign","text","secondary","fontFamily","maininfoPanel","fontSize","GlobalStats","useState","global_data","setglobal_data","useEffect","a","fetch","response","json","data","console","log","get_data","Grid","container","item","xs","Paper","component","Object","keys","map","val","ind","sm","replace","toUpperCase","search_button","input","flex","iconButton","divider","Country","setcountry","country_data","setcountry_data","i","length","onClick","event","preventDefault","IconButton","aria-label","InputBase","placeholder","inputProps","onChange","target","value","type","Graphline","graph_country","set_graph","dat","get_history","labels","datasets","parseInt","label","borderColor","borderWidth","options","indexAxis","elements","bar","responsive","plugins","legend","InfoPanel","currentScreen","bottom","left","right","FootNav","ScreenShow","BottomNavigation","newValue","showLabels","BottomNavigationAction","icon","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39b0c8f4.chunk.js","sourcesContent":["import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(3),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function NavbarSearch() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Covid-19 Tracker App\r\n          </Typography>\r\n\r\n          <Button color=\"inherit\">Home</Button>\r\n          <Button color=\"inherit\">About</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        root: {\r\n            maxWidth: 1000,\r\n            margin: '0 auto',\r\n            marginTop: '1000',\r\n\r\n        },\r\n        paper: {\r\n            padding: theme.spacing(2),\r\n            textAlign: 'center',\r\n            color: theme.palette.text.secondary,\r\n            fontFamily: 'Arial',\r\n            backgroundColor: '#ff1744'\r\n        },\r\n        maininfoPanel: {\r\n            fontSize: 40,\r\n            padding: theme.spacing(2),\r\n            textAlign: 'center',\r\n            color: theme.palette.text.secondary,\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function GlobalStats() {\r\n    const classes = useStyles();\r\n    const [global_data, setglobal_data] = useState({});\r\n    //const [world_data, set_world_data] = useState({});\r\n    useEffect(() => {\r\n        async function get_data() {\r\n            const response = await fetch('https://covid-19.dataflowkit.com/v1');\r\n            let data = await response.json();\r\n            console.log(data);\r\n            setglobal_data(data[0])\r\n        }\r\n        get_data();\r\n    }, [])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <br />\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <Paper>\r\n                        <Typography variant=\"h5\" component=\"h3\" className={classes.paper}>\r\n                            Global Data Result\r\n                        </Typography>\r\n                    </Paper>\r\n                </Grid>\r\n                {Object.keys(global_data).map((val, ind) => {\r\n                    return (\r\n                        <Grid item xs={12} sm={6} key={ind}>\r\n                            <Paper className={classes.paper}>\r\n                                <h4>{val.replace(/_/g, ' ').replace(/ text/g, '').toUpperCase()}</h4>\r\n                                <h4>\r\n                                    {global_data[val]}\r\n                                </h4>\r\n                            </Paper>\r\n                        </Grid>\r\n                    );\r\n                })}\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <Paper></Paper>\r\n            </Grid>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n//import { Typography } from '@material-ui/core';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        root: {\r\n            maxWidth: 1000,\r\n            margin: '0 auto',\r\n            marginTop: '1000',\r\n\r\n        },\r\n        paper: {\r\n            padding: theme.spacing(2),\r\n            textAlign: 'center',\r\n            color: theme.palette.text.secondary,\r\n            fontFamily: 'Arial',\r\n            backgroundColor: 'cyan'\r\n\r\n        },\r\n        maininfoPanel: {\r\n            fontSize: 40,\r\n            padding: theme.spacing(2),\r\n            textAlign: 'center',\r\n            color: theme.palette.text.secondary,\r\n        },\r\n        search_button: {\r\n            padding: '2px 4px',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            width: 990,\r\n        },\r\n        input: {\r\n            marginLeft: theme.spacing(1),\r\n            flex: 1,\r\n        },\r\n        iconButton: {\r\n            padding: 10,\r\n        },\r\n        divider: {\r\n            height: 28,\r\n            margin: 4,\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function GlobalStats() {\r\n    const classes = useStyles();\r\n    const [Country, setcountry] = useState(\"\");\r\n    //const [check, check_country] = useState();\r\n\r\n    const [country_data, setcountry_data] = useState({});\r\n    async function get_data() {\r\n        const response = await fetch('https://covid-19.dataflowkit.com/v1');\r\n        let data = await response.json();\r\n        console.log(data);\r\n        for (var i = 0; i < data.length; i++) {\r\n            if (data[i][\"New Cases_text\"] === \"\") {\r\n                data[i][\"New Cases_text\"] = \"0\";\r\n            }\r\n            if (data[i][\"New Deaths_text\"] === \"\") {\r\n                data[i][\"New Deaths_text\"] = \"0\";\r\n            }\r\n            if (data[i][\"Country_text\"] === Country) {\r\n                setcountry_data(data[i]);\r\n            }\r\n        }\r\n        console.log(\"Event Added\", Country);\r\n\r\n    }\r\n    useEffect(() => {\r\n        get_data();\r\n    }, [])\r\n    const onSubmits = (event) => {\r\n        event.preventDefault();\r\n        //check_country(Country)\r\n        console.log(Country);\r\n        get_data();\r\n    }\r\n    const InputEvent = (event) => {\r\n        console.log(event.target.value);\r\n        setcountry(event.target.value);\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n            <br/>\r\n            <form onClick={onSubmits}>\r\n                <Paper component=\"form\" className={classes.search_button}>\r\n                    <IconButton className={classes.iconButton} aria-label=\"menu\">\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <InputBase\r\n                        className={classes.input}\r\n                        placeholder=\"Search Country\"\r\n                        inputProps={{ 'aria-label': 'Search Country' }}\r\n                        onChange={InputEvent} \r\n                        value={Country}\r\n                    />\r\n                    <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n                        <SearchIcon />\r\n                    </IconButton>\r\n                </Paper>\r\n                \r\n            </form>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <Paper>\r\n                    </Paper>\r\n                </Grid>\r\n                {Object.keys(country_data).map((val, ind) => {\r\n                    return (\r\n                        <Grid item xs={12} sm={6} key={ind}>\r\n                            <Paper className={classes.paper}>\r\n                                <h3>{val.replace(/_/g, ' ').replace(/ text/g, '').toUpperCase()}</h3>\r\n                                <h4>\r\n                                    {country_data[val]}\r\n                                </h4>\r\n                            </Paper>\r\n                        </Grid>\r\n                    );\r\n                })}\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nfunction Graphline() {\r\n    const [graph_country, set_graph] = useState({});\r\n    const [deta , setdeta] = useState();\r\n    async function get_history() {\r\n        const response = await fetch('https://covid-19.dataflowkit.com/v1');\r\n        let dat = await response.json();\r\n        console.log(\"At graph\", dat[0]);\r\n        set_graph(dat[0]);\r\n    }\r\n    useEffect(() => {\r\n        get_history();\r\n        \r\n    }, [])\r\n    \r\n    //console.log(graph_country['Active Cases_text'].replace(',', '').replace(',',''))\r\n    console.log()\r\n    const data = {\r\n        labels: ['Total Cases', 'Total Recovered', 'Total Deaths', 'New Cases', 'New Deaths'],\r\n        datasets: [\r\n            {\r\n                data: [(parseInt(graph_country['Total Cases_text'])),\r\n                (parseInt(graph_country['Total Recovered_text'])),\r\n                (parseInt(graph_country['Total Deaths_text'])),\r\n                (parseInt(graph_country['New Cases_text'])),\r\n                (parseInt(graph_country['New Deaths_text']))\r\n                ],\r\n\r\n                label: 'Number of Cases',\r\n                backgroundColor: [\r\n                    'rgba(255, 99, 132, 0.2)',\r\n                    'rgba(54, 162, 235, 0.2)',\r\n                    'rgba(255, 206, 86, 0.2)',\r\n                    'rgba(75, 192, 192, 0.2)',\r\n                    'rgba(153, 102, 255, 0.2)',\r\n                    'rgba(255, 159, 64, 0.2)',\r\n                ],\r\n                borderColor: [\r\n                    'rgba(255, 99, 132, 1)',\r\n                    'rgba(54, 162, 235, 1)',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    'rgba(75, 192, 192, 1)',\r\n                    'rgba(153, 102, 255, 1)',\r\n                    'rgba(255, 159, 64, 1)',\r\n                ],\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    };\r\n    const options = {\r\n        indexAxis: 'y',\r\n        // Elements options apply to all of the options unless overridden in a dataset\r\n        // In this case, we are setting the border of each horizontal bar to be 2px wide\r\n        elements: {\r\n            bar: {\r\n                borderWidth: 2,\r\n            },\r\n        },\r\n        responsive: true,\r\n        plugins: {\r\n            legend: {\r\n                position: 'right',\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: 'Chart.js Horizontal Bar Chart',\r\n            },\r\n        },\r\n    };\r\n    \r\n\r\n    return (\r\n        <>\r\n            <div className='header'>\r\n                Data In MILLION\r\n                <h1 className='title'>{graph_country['Country_text']}</h1>\r\n                \r\n            </div>\r\n            <div className=\"denta\">\r\n                <Bar data={data} options={options} />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Graphline;","import React from 'react';\r\nimport GlobalStats from './GlobalStats';\r\nimport CountryStats from './CountryStats';\r\nimport Graphline from './Graphline';\r\n\r\nexport default function InfoPanel({currentScreen}) {\r\n    \r\n    if(currentScreen === 0){\r\n        return(\r\n            <GlobalStats/>\r\n        );\r\n    }\r\n    else if(currentScreen === 1){\r\n        return(\r\n            <CountryStats/>\r\n        );\r\n    }\r\n    else if(currentScreen === 2){\r\n        return(\r\n            <div className=\"graph\">\r\n                <Graphline/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    position:'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    backgroundColor: '#4a148c',\r\n    color: 'white'\r\n  },\r\n});\r\n\r\nexport default function FootNav({ScreenShow}) {\r\n  const classes = useStyles();\r\n\r\n  console.log(ScreenShow[0]);\r\n  //const [value, setValue] = React.useState(0);\r\n\r\n  return (\r\n    <BottomNavigation\r\n      value={ScreenShow[0]}\r\n      onChange={(event, newValue) => {\r\n        ScreenShow[1](newValue);\r\n      }}\r\n      showLabels\r\n      className={classes.root}\r\n    >\r\n      <BottomNavigationAction className = \"iconss\" label=\"Global\" icon={<RestoreIcon />} />\r\n      <BottomNavigationAction label=\"Country\" icon={<FavoriteIcon />} />\r\n      <BottomNavigationAction label=\"Country\" icon={<LocationOnIcon />} />\r\n    </BottomNavigation>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\nimport NavbarSearch from './Components/Navbar';\n//import Linechart from './Components/Graph';\nimport InfoPanel from './Components/InfoPanel';\nimport FootNav from './Components/FootNav';\nimport './App.css';\n\nfunction App() {\n  const ScreenShow = useState(0);\n  return (\n    <div className=\"maint\">\n      <NavbarSearch/>\n      <InfoPanel currentScreen = {ScreenShow[0]}/>\n      <FootNav ScreenShow = {ScreenShow}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}